class QuickSort
  @valuesArray=Array.new;
  @numberOfValues=-1;
  
  def initialize(values, count)
    @valuesArray=values;
    @numberOfValues=count;
  end
  
  def QuickSort(partitionStartIndex, partitionEndIndex)
    subPartitionIndex=Partition(partitionStartIndex, partitionEndIndex);
    QuickSort(partitionStartIndex, subPartitionIndex-1);
    QuickSort(subPartitionIndex+1, partitionEndIndex);
  end
  
  def Partition(partitionStartIndex, partitionEndIndex)
    i=partitionStartIndex-1;
    pivotValue=@valuesArray[partitionEndIndex-1];
    
    
    for j in partitionStartIndex..partitionEndIndex-1
      if (@avaluesArray[j-1] <= pivotValue)
        i=i+1;
              
        temp=@valuesArray[i-1];
        @valuesArray[i-1]=@valuesArray[j-1];
        @valuesArray[j-1]=temp;
      end
    end
    
    #place pivot value in its correct position
    @valuesArray[partitionEndIndex-1]=@valuesArray[(i+1)-1];
    @valuesArray[(i+1)-1]=pivotValue;
    
    return i+1;
  end
end